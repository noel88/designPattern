facade

- 하나의 문제를 해결하기 위해서 여러 클래스에서 제공하는 기능을 이용해야 하는데 그 방식이 너무 복잡하여 창구 역할을 하는 클래스를 내세워
이용방식을 단순하게 만드는 패턴

사용시점
1. 상위 수준에서 인터페이스를 정의하여 하위 수준의 서브시스템의 기능을 사용할 수 있게 하고자 할때
2. 하나의 일 처리를 위해서 여러 클래스를 이용해야 하고 처리 알고리즘이 복잡
3. 여러 종류의 라이브러리를 사용해야 하는 경우
4. import 구문에 선언된 클래스가 너무 많고 다양함

사용효과
1. 클라이언트와 서브시스템 간의 직접적인 의존관계를 제거한다.
2. 서브시스템을 변경해야 할 경우에 클라이언트를 변경할 필요가 없다. 퍼사드만 변경하면 된다.


Prototype
- 클래스가 아닌 기존의 객체(원형객체)로 부터 자신과 똑같은 객체를 생성하는 패턴

장점
1. 객체를 생성해 주기 위한 별도의 객체 생성 클래스가 불필요하다.
2. 객체의 각 부분을 조합해서 생성되는 형태에도 적용 가능하다.

단점
1. 생성될 객체들이 자료형인 클래스들이 모두 clone()메서드를 구현해야 한다.

사용시점
1. 개체를 생성하는 방식이 너무 동적이거나 다양하다.
2. 클래스로부터 개체를 생성하는 것이 자원이나 시간이 너무 많이 소모되거나 복잡하다
3. 프로그램을 실행 중간에 객체를 생성해야 한다.

사용효과
1. 새로운 객체를 만드는 복잡한 과정을 몰라도 객체를 생성할 수 있다.
2. 객체라는 것은 실시간으로 생성되는 것이므로 객체의 생성 정보를 실시간으로 결정지을수 있다.
3. 같은 정보를 포함하는 객체 생성에 따른 부하를 줄여 준다.
4. 클래스를 통해 직접 객체를 생성하는 데 필요한 자원은 낭비를 피하는 것.